{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","countPage","Math","ceil","className","classnames","disabled","href","onClick","map","page","active","App","useState","setCurrentPage","countItemsPerPage","setCountItemsPerPage","fromItem","toItem","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAYC,KAAKC,KAAKN,EAAQC,GAEpC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMR,EAAaD,EAAc,IAL5C,oBAUDT,EAAW,EAAGW,GAAWQ,KAAI,SAAAC,GAAI,OAChC,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQZ,IAAgBW,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAZEA,MAgBT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUP,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMR,EAAaD,EAAc,IAL5C,wBCjDKa,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBe,EAApB,KACA,EAAkDD,mBAAS,GAA3D,mBAAOE,EAAP,KAA0BC,EAA1B,KAEMC,GAAYlB,EAAc,GAAKgB,EAAoB,EACnDG,EAASnB,IAAgBG,KAAKC,KAPxB,GAOqCY,GAPrC,GASRhB,EAAcgB,EAOlB,OACE,sBAAKX,UAAU,YAAf,UACE,uDACA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQL,EAAR,sBACakB,EADb,iBAEQC,GAFR,cApBK,GAoBL,OAMH,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAOL,EACPM,SAtBiB,SAACC,GAC1BN,GAAsBM,EAAMC,OAAOH,OACnCN,EAAe,IAeT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAhDM,GAiDNC,QAASiB,EACThB,YAAaA,EACbC,aAAcc,IAGhB,6BACGxB,EAAW2B,EAAUC,GAAQT,KAAI,SAAAf,GAAC,OACjC,oBAAY,UAAQ,OAApB,wBAAoCA,IAA3BA,YC1DnB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3aecb2e3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const countPage = Math.ceil(total / perPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classnames(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {getNumbers(1, countPage).map(page => (\n        <li\n          key={page}\n          className={classnames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classnames(\n        'page-item',\n        { disabled: currentPage === countPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = 42;\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countItemsPerPage, setCountItemsPerPage] = useState(3);\n\n  const fromItem = (currentPage - 1) * countItemsPerPage + 1;\n  const toItem = currentPage === Math.ceil(items / countItemsPerPage)\n    ? items\n    : currentPage * countItemsPerPage;\n\n  const changeCountPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCountItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `\n          + `(items ${fromItem} `\n          + `- ${toItem}`\n          + ` of ${items})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countItemsPerPage}\n            onChange={changeCountPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items}\n        perPage={countItemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {getNumbers(fromItem, toItem).map(n => (\n          <li key={n} data-cy=\"item\">{`Item ${n}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}